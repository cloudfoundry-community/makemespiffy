#!/usr/bin/env ruby

require 'makemespiffy'

input_manifest_path=ARGV[0]
input_scope=ARGV[1]
output_spiff_template_path=ARGV[2]
output_meta_scope=ARGV[3]

if ARGV[3].nil? || ARGV[3].length == 0
  $stderr.puts "USAGE: makemespiffy manifest.yml properties.something templates/properties.yml meta.something"
  exit 1
end

input_manifest = MakeMeSpiffy::InputManifest.from_file(input_manifest_path)
value = input_manifest.spiffy(input_scope, output_meta_scope)

output_manifest = MakeMeSpiffy::OutputTemplateManifest.from_file(output_spiff_template_path)
output_manifest.insert_scope_value(output_meta_scope, value)

#
# (( x.y.z )) is rendered as "(( x.y.z ))" in to_yaml; so explicitly
# construct the YAMLTree
#
# Thanks @tenderlove for https://gist.github.com/tenderlove/8c3988b8f797dfee0a3a
#
def tree o, options = {}
  visitor = Psych::Visitors::YAMLTree.create options
  visitor << o
  visitor.tree
end

t = tree(input_manifest.manifest)
# find scalar nodes and modify them
t.grep(Psych::Nodes::Scalar).each do |node|
  node.plain  = true
  node.quoted = false
  node.style  = Psych::Nodes::Scalar::PLAIN
end

File.open(input_manifest_path, "w") do |file|
  file << t.yaml
end
File.open(output_spiff_template_path, "w") do |file|
  file << output_manifest.manifest.to_yaml
end
